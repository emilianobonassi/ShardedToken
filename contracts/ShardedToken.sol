pragma solidity ^0.5.0;

import "@openzeppelin/contracts/math/SafeMath.sol";
import "@openzeppelin/contracts/ownership/Ownable.sol";
import "./Sharded.sol";
import "./IShardedToken.sol";


contract ShardedToken is IShardedToken, ShardedBase, Ownable {
    using SafeMath for uint256;

    uint256 public totalSupply;

    event Mint(address indexed to, uint256 amount);
    event Burn(address indexed who, uint256 amount);

    // solium-disable-next-line max-len
    constructor() public ShardedBase(hex"6080604052600080546001600160a01b031916331781556100276001600160e01b0361007a16565b600280546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061007e565b3390565b610ac38061008d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb14610244578063b69ef8a814610270578063f11e547d14610278578063f2fde38b146102a4576100f5565b8063715018a6146101f25780638da5cb5b146101fa5780638f32d59b1461020257806397a111f31461021e576100f5565b806315155319116100d3578063151553191461016e5780633e5beab91461018b57806342966c68146101b15780635001f3b5146101ce576100f5565b806301c6adc3146100fa5780630624c9c414610128578063095ea7b314610142575b600080fd5b6101266004803603604081101561011057600080fd5b506001600160a01b0381351690602001356102ca565b005b610130610308565b60408051918252519081900360200190f35b6101266004803603604081101561015857600080fd5b506001600160a01b03813516906020013561030e565b6101266004803603602081101561018457600080fd5b503561039d565b610130600480360360208110156101a157600080fd5b50356001600160a01b031661040e565b610126600480360360208110156101c757600080fd5b5035610429565b6101d6610524565b604080516001600160a01b039092168252519081900360200190f35b610126610533565b6101d66105c4565b61020a6105d3565b604080519115158252519081900360200190f35b6101d66004803603602081101561023457600080fd5b50356001600160a01b03166105f9565b6101266004803603604081101561025a57600080fd5b506001600160a01b03813516906020013561061f565b610130610670565b6101266004803603604081101561028e57600080fd5b506001600160a01b038135169060200135610676565b610126600480360360208110156102ba57600080fd5b50356001600160a01b03166106ce565b336000908152600460205260409020546102ea908263ffffffff61072116565b33600090815260046020526040902055610304828261076a565b5050565b60015481565b6103166105d3565b610355576040805162461bcd60e51b81526020600482018190526024820152600080516020610a6f833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152600460205260409020541580610378575080155b61038157600080fd5b6001600160a01b03909116600090815260046020526040902055565b6000546001600160a01b031633146103b457600080fd5b60015415610409576040805162461bcd60e51b815260206004820152601960248201527f536861726465644578743a206163636573732064656e69656400000000000000604482015290519081900360640190fd5b600155565b6001600160a01b031660009081526004602052604090205490565b6104316105d3565b610470576040805162461bcd60e51b81526020600482018190526024820152600080516020610a6f833981519152604482015290519081900360640190fd5b61049d81604051806060016040528060298152602001610a4660299139600354919063ffffffff61082516565b6003556000546001600160a01b0316638b1897d46104b96105c4565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031681565b61053b6105d3565b61057a576040805162461bcd60e51b81526020600482018190526024820152600080516020610a6f833981519152604482015290519081900360640190fd5b6002546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280546001600160a01b0319169055565b6002546001600160a01b031690565b6002546000906001600160a01b03166105ea6108bc565b6001600160a01b031614905090565b600154600080549091610619916001600160a01b038086169291166108c0565b92915050565b6106276105d3565b610666576040805162461bcd60e51b81526020600482018190526024820152600080516020610a6f833981519152604482015290519081900360640190fd5b610304828261076a565b60035490565b60005482906001600160a01b03163314806106aa5750610695816105f9565b6001600160a01b0316336001600160a01b0316145b6106b357600080fd5b6003546106c6908363ffffffff61092416565b600355505050565b6106d66105d3565b610715576040805162461bcd60e51b81526020600482018190526024820152600080516020610a6f833981519152604482015290519081900360640190fd5b61071e8161097e565b50565b600061076383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610825565b9392505050565b61079781604051806060016040528060298152602001610a4660299139600354919063ffffffff61082516565b6003556107a3826105f9565b6001600160a01b031663f11e547d6107b96105c4565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561080957600080fd5b505af115801561081d573d6000803e3d6000fd5b505050505050565b600081848411156108b45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610879578181015183820152602001610861565b50505050905090810190601f1680156108a65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b3390565b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff19166021820152603581019490945260558085019390935280518085039093018352607590930190925280519101206001600160a01b031690565b600082820183811015610763576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0381166109c35760405162461bcd60e51b8152600401808060200182810382526026815260200180610a206026913960400191505060405180910390fd5b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737353686172646564546f6b656e457874656e73696f6e3a204e6f7420656e6f7567682062616c616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158202741a4ed179618f8410b3921ec9f3e5ee529907b99f0292304812348b85ff19664736f6c63430005100032") {
    }

    function mint(address to, uint256 amount) public onlyOwner {
        totalSupply = totalSupply.add(amount);
        IShardedTokenExtension(extensionOf(to)).received(address(0), amount);
        emit Mint(to, amount);
    }

    function burned(address from, uint256 amount) public onlyExtensionOfUser(from) {
        totalSupply = totalSupply.sub(amount);
        emit Burn(from, amount);
    }

    function installExtension() public returns(address extension) {
        extension = super.installExtension();
        Ownable(extension).transferOwnership(msg.sender);
    }
}
